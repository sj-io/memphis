[["index.html", "Memphis About", " Memphis Sarah Johnson 2021-09-24 About tidycensus is an R program that makes collecting, analyzing, and plotting census data dead simple. I have used tidycensus extensively in the past, including for my master’s capstone. Since completing my capstone in August 2021, the creator of tidycensus, Kyle Walker, released a book entitled “Analyzing US Census Data: Methods, Maps, and Models in R.” I am eager to read through this book and learn new things. This repository is a place to organize my progress as I work through the book. All data analysis for this book will be centered around my hometown, Memphis, TN. "],["introduction.html", "Chapter 1 Introduction 1.1 The US Census 1.2 R", " Chapter 1 Introduction This section will cover the basics of the US Census, geographic divisions, and how to access Census data. 1.1 The US Census The United States Constitution mandates a complete count of the US population be taken every ten years. The first Census was conducted in 1790, and population counts were (and still are) used to apportion seats for the House of Representatives. Overtime, the decennial Census expanded to collect data on income, education, language, housing, and more. The Bureau also began collecting data more frequently through new surveys, including the American Community Survey (ACS). Unlike the decennial Census, the ACS does not attempt to precisely count all US residents. Rather, this survey is mailed annually to approximately 3.5 million households, representing ~3% of the US population. The ACS is now the premier source of detailed demographic information for the US. Two ACS datasets are made public each year: the 1-year ACS and the 5-year ACS. 1-Year ACS Covers areas with populations of 65,000+. Contains data from one year; higher margin of error. 5-Year ACS Covers geographies down to the block group level. Moving average of data over a 5-year period; lower margin of error. Due to COVID-related data collection problems, the 2020 1-year ACS data will not be released, replaced by experimental estimates. 1.1.1 Geographies Census data is published for a range of geographies, from the nation as a whole, down to neighborhood-scale census blocks. The hierarchy used by the Census Bureau is shown below.1 Geographic hierarchy used by US Census Bureau Let’s use Memphis as an example.2 Nation: United States Region: South (Region 3) Division: East South Central (Division 6) State: Tennessee (FIPS Code 47) County: Shelby Place: Memphis Counties are further subdivided into census tracts; tracts into block groups; block groups into blocks. 1.1.2 Accessing Data The simplest way to access Census data is through data.census.gov, where users can enter custom queries and download datasets. Bulk ZIP files are also available on the Bureau’s FTP site. Since 2012, Census data is available to the public through APIs. Datasets are assigned a base web address, such as https://api.census.gov/data/2010/dec/sf1 for the 2010 decennial Census. Users can specify which dataset they need through queries. For example, the query ?get=P001001,NAME&amp;for=county:*&amp;in=state:47 asks to see population data for all counties in Tennessee. This data can be seen here. Many R packages make it easier to interact with the Census API, such as tidycensus. Those who wish to access the Census API through R packages need to request a Census API key, available for free. 1.2 R R is a powerful, popular programming language, available as a free and open-source software (FOSS). It is possible to work solely with R, but it is typically paired with RStudio, another FOSS. The basics of R and RStudio will not be covered in this book. If you are completely new to these programs, I recommend you read the brief rundown in Kyle Walker’s book and read/bookmark/work through R for Data Science. An R package is a collection of functions, data, and documentation that extends the capabilities of base R.3 Anyone can make a package and submit it for publication (or host it on their personal GitHub page).4 This means R can quickly evolve and develop as the community sees fit, unlike commercial software. However, this can make R feel fragmented and overwhelming to new users. 1.2.1 tidyverse The tidyverse is a collection of packages that share a common philosophy and are designed to work together naturally, addressing problems of fragmentation. These packages are designed to address frequent data analysis tasks, including data wrangling and visualization, using a common syntax. Key to the tidyverse is the idea of tidy data.5 A dataset is messy or tidy depending on how rows, columns, and values are organized. There are three rules which make data tidy: Each variable must have its own column. Each observation must have its own row. Each value must have its own cell. Messy data is any other arrangement of the data. These rules are visualized below.6 A dataset is tidy if: variables are in columns, observations are in rows, and values are in cells. Keeping data in a tidy format creates a consistent way of storing data and makes tidyverse packages easy to use. This book will contain many examples of tidy data. 1.2.2 tidycensus The tidycensus package, first released in 2017, aims to make Census data available to R users in a tidyverse-friendly format.7 The package also was designed to streamline spatial analysis by allowing users to request geometric attributes for their Census data. tidycensus is not a comprehensive portal to Census Bureau API. Instead, selected datasets are available through core functions: get_decennial(), for the decennial Census APIs. Available for 2000, 2010, (and 2020 on 9/30/2021) get_acs() for the American Community Survey. 1-year ACS available from 2005 5-year ACS available from 2005-2009 get_estimates(), for the Population Estimates APIs. get_pums(), for the ACS Public Use Microdata Sample APIs. get_flows(), for the ACS Migration Flows APIs. These functions allow users to easily and quickly access Census data. References "],["getting-census-data.html", "Chapter 2 Getting Census Data 2.1 Getting Data", " Chapter 2 Getting Census Data 2.1 Getting Data This section will cover how to collect various types of Census data using tidycensus. If this is your first time using tidycensus, run install.packages(\"tidycensus\"). You will also need a Census API key, available at https://api.census.gov/data/key_signup.html. The key is required every time you call data; run census_api_key() with install = TRUE to automatically include the key in calls. library(tidyverse) library(tidycensus) # census_api_key(&quot;YOUR KEY GOES HERE&quot;, install = TRUE) 2.1.1 Decennial Census To get data from the decennial Census, users must specify a geography and one or more variables, such as population. A year is optional; if omitted, it will default to the most recently available dataset. The following code gets the total population from all states, plus D.C. and Puerto Rico, from the 2010 decennial Census. totPop10 &lt;- get_decennial( geography = &quot;state&quot;, variables = &quot;P001001&quot;, year = 2010, cache_table = TRUE ) In RStudio, the table totPop10 appears under the Environment tab. Users can click on the table to open it and see the full list of states. Clicking on the value column name sorts state population by ascending or descending order. Total population of all states according to the 2010 decennial Census, sorted by descending order in RStudio. According to the 2010 decennial Census, there were 6,346,105 people living in Tennessee, making it the 17th most populous state. Slightly changing the code allows us to find the 2000 population. totPop00 &lt;- get_decennial( geography = &quot;state&quot;, variables = &quot;P001001&quot;, year = 2000, cache_table = TRUE ) totPop00 %&gt;% filter(NAME == &quot;Tennessee&quot;) ## # A tibble: 1 × 4 ## GEOID NAME variable value ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 47 Tennessee P001001 5689283 There were 5,689,283 people in Tennessee in 2000. We can then join the tables and find the population change of all states over the decade. The below function: First, joins the tables by the NAME variable (you could also use GEOID). When the tables are joined, matching column names are automatically relabeled (such as value.x and value.y). To avoid confusion, I used rename() to change the column names. The mutate() function was used to create a new column called popChg. The values of the new column were found by subtracting pop10 and pop00. select() is used to narrow the table to only show relevant columns (excluding GEOID and variable columns). I used arrange() to sort the table by descending popChg. This means states with the largest change in population appear at the top. Finally, head() previews the table and allows us to select how many rows to view. totPop &lt;- totPop00 %&gt;% left_join(totPop10, by = &quot;NAME&quot;) %&gt;% rename(pop00 = value.x, pop10 = value.y) %&gt;% mutate(popChg = pop10 - pop00) %&gt;% select(NAME, pop00, pop10, popChg) %&gt;% arrange(desc(popChg)) head(totPop, 15) ## # A tibble: 15 × 4 ## NAME pop00 pop10 popChg ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Texas 20851820 25145561 4293741 ## 2 California 33871648 37253956 3382308 ## 3 Florida 15982378 18801310 2818932 ## 4 Georgia 8186453 9687653 1501200 ## 5 North Carolina 8049313 9535483 1486170 ## 6 Arizona 5130632 6392017 1261385 ## 7 Virginia 7078515 8001024 922509 ## 8 Washington 5894121 6724540 830419 ## 9 Colorado 4301261 5029196 727935 ## 10 Nevada 1998257 2700551 702294 ## 11 Tennessee 5689283 6346105 656822 ## 12 South Carolina 4012012 4625364 613352 ## 13 Utah 2233169 2763885 530716 ## 14 Maryland 5296486 5773552 477066 ## 15 Pennsylvania 12281054 12702379 421325 From 2000 to 2010, Tennessee’s total population rose by 656,822 people. This was the 11th highest gain in total population of all states (plus D.C. and Puerto Rico). Before moving on, let’s also calculate the percent change in population to see which states grew the fastest. totPop &lt;- totPop %&gt;% mutate(pctChg = (pop10-pop00)/pop00) %&gt;% arrange(desc(pctChg)) totPop ## # A tibble: 52 × 5 ## NAME pop00 pop10 popChg pctChg ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Nevada 1998257 2700551 702294 0.351 ## 2 Arizona 5130632 6392017 1261385 0.246 ## 3 Utah 2233169 2763885 530716 0.238 ## 4 Idaho 1293953 1567582 273629 0.211 ## 5 Texas 20851820 25145561 4293741 0.206 ## 6 North Carolina 8049313 9535483 1486170 0.185 ## 7 Georgia 8186453 9687653 1501200 0.183 ## 8 Florida 15982378 18801310 2818932 0.176 ## 9 Colorado 4301261 5029196 727935 0.169 ## 10 South Carolina 4012012 4625364 613352 0.153 ## # … with 42 more rows The fastest growing states during the 2000s were in the southwest: Nevada, Arizona, and Utah. Meanwhile, Tennessee’s population increased by 11.54% from 2000 to 2010, making it the 19th fastest growing state. 2.1.2 American Community Survey The American Community Survey is accessed through the get_acs() function. The "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
